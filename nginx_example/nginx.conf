user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;

pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 5;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format custom '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" "$http_accept_language"';

    # SSE 专用日志格式
    log_format sse_error '$time_local - SSE_ERROR - $remote_addr - '
                        '"$request" $status $body_bytes_sent '
                        '"$http_user_agent" "$http_referer" '
                        'upstream_response_time: $upstream_response_time '
                        'request_time: $request_time '
                        'connection_requests: $connection_requests';

    server {
        listen 80;
        server_name yourwebsite.com www.yourwebsite.com;
        return 301 https://www.yourwebsite.com$request_uri;
    }

    server {
        listen 443 ssl;
        http2 on;

        server_name yourwebsite.com www.yourwebsite.com;

        # 添加响应头明确协议版本
        add_header Alt-Svc 'h2=":443"' always;

        # HTTP/2 优化
        large_client_header_buffers 4 64k;
        keepalive_requests 10000;
        http2_max_concurrent_streams 128;

        # SSL 配置
        ssl_certificate /etc/nginx/cert/yourwebsite.com.pem;
        ssl_certificate_key /etc/nginx/cert/yoursebsite.com.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        # 访问日志和错误日志
        # access_log /var/log/nginx/access.log;
        access_log /var/log/nginx/access.log custom;
        error_log /var/log/nginx/error.log;

        # 配置错误页面 - 修改为正确的错误页面路径
        error_page 404 /error/index.html;

        # favicon.ico 处理 - 从根目录加载
        location = /favicon.ico {
            root /usr/share/nginx/html;  # 改用root指令
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            access_log off;
        }

        # 静态资源目录 - 根目录请求处理
        # location = / {
        #     root /usr/share/nginx/html;  # 修改为正确的根目录
        #     index index/index.html;      # 指向正确的首页文件
        #     expires 7d;
        #     add_header Cache-Control "public, max-age=604800";
        # }

        # 静态资源目录 - 根目录请求处理
        location = / {
            root /usr/share/nginx/html;
            try_files /home/en.html =404; # 明确指定 home/en.html
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
        }

        # 语言路径配置 - 统一处理 /cn, /en, /tw, /ja
        location ~ ^/(cn|en|tw|ja)$ {
            root /usr/share/nginx/html;
            try_files /home/$1.html =404; # 明确查找 home/<语言>.html
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
        }

        location ~ ^/(cn|en|tw|ja)/(.+)$ {
            return 404; # 仅对 /cn/<something> 返回 404
        }

        # 转发API请求到FastAPI应用，并添加CORS支持
        location /api/ {
            proxy_pass http://app:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 添加 Cloudflare 相关头部
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            proxy_set_header CF-Ray $http_cf_ray;
            
            # HTTP/2 优化
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 流式响应优化
            proxy_buffering off;
            proxy_cache off;
            proxy_connect_timeout 60s;
            # 调整代理超时（核心参数）
            proxy_read_timeout 86400s;  # 长连接超时（建议1天）
            proxy_send_timeout 86400s;  # 发送超时（与后端服务器通信）
        }

        # 各个子应用的静态资源
        location ~ ^/(login|workspace|project|share|aboutus|termsofuse|privacypolicy|usercenter|error) {
            root /usr/share/nginx/html;
            #try_files $uri $uri/ /$1/index.html;
            try_files $uri /$1/index.html;
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
            
            # 为静态资源添加额外的缓存控制
            location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
                root /usr/share/nginx/html;
                expires 30d;
                add_header Cache-Control "public, max-age=2592000";
                access_log off;
            }
        }

        # 默认静态资源处理
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ =404;
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
        }
    }
}